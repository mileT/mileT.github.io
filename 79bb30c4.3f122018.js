(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{114:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(1),i=t(6),a=(t(0),t(145)),o={id:"leetcode76",title:"76. Minimum Window Substring"},c={id:"leetcode76",title:"76. Minimum Window Substring",description:"## Minimum Window Substring",source:"@site/docs/leetcode76.md",permalink:"/docs/leetcode76",editUrl:"http://localhost:3000/docs/leetcode76.md",sidebar:"someSidebar",previous:{title:"5. Longest Palindromic Substring",permalink:"/docs/leetcode5"}},l=[{value:"Minimum Window Substring",id:"minimum-window-substring",children:[{value:"Example 1:",id:"example-1",children:[]},{value:"Example 2:",id:"example-2",children:[]},{value:"Constraints:",id:"constraints",children:[]},{value:"Follow up:",id:"follow-up",children:[]}]},{value:"Solution",id:"solution",children:[]}],u={rightToc:l};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"minimum-window-substring"},"Minimum Window Substring"),Object(a.b)("p",null,"Given two strings ",Object(a.b)("inlineCode",{parentName:"p"},"s")," and ",Object(a.b)("inlineCode",{parentName:"p"},"t"),", return the minimum window in ",Object(a.b)("inlineCode",{parentName:"p"},"s")," which will contain all the characters in ",Object(a.b)("inlineCode",{parentName:"p"},"t"),". If there is no such window in ",Object(a.b)("inlineCode",{parentName:"p"},"s")," that covers all characters in ",Object(a.b)("inlineCode",{parentName:"p"},"t"),', return the empty string "".\nNote that If there is such a window, it is guaranteed that there will always be only one unique minimum window in ',Object(a.b)("inlineCode",{parentName:"p"},"s"),"."),Object(a.b)("h3",{id:"example-1"},"Example 1:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'Input: s = "ADOBECODEBANC", t = "ABC"\nOutput: "BANC"\n')),Object(a.b)("h3",{id:"example-2"},"Example 2:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'Input: s = "a", t = "a"\nOutput: "a"\n')),Object(a.b)("h3",{id:"constraints"},"Constraints:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"1 <= s.length, t.length <= 105\ns and t consist of English letters.\n")),Object(a.b)("h3",{id:"follow-up"},"Follow up:"),Object(a.b)("p",null,"Could you find an algorithm that runs in ",Object(a.b)("inlineCode",{parentName:"p"},"O(n)")," time?"),Object(a.b)("h2",{id:"solution"},"Solution"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'public class Solution {\n    public String minWindow(String s, String t) {\n        if(t.length() > s.length()) return "";\n        Map<Character, Integer> map = new HashMap();\n        for(char c: t.toCharArray()) {\n            map.put(c, map.getOrDefault(c, 0) + 1);\n        }\n        int counter = map.size();\n\n        int begin = 0, end = 0;\n        int head = 0;\n        int len = Integer.MAX_VALUE;\n\n        while(end < s.length()) {\n            char c = s.charAt(end);\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c) - 1);\n                if(map.get(c) == 0) counter--;\n            }\n            end++;\n\n            while(counter == 0){\n                char tempc = s.charAt(begin);\n                if(map.containsKey(tempc)) {\n                    map.put(tempc, map.get(tempc) + 1);\n                    if(map.get(tempc) > 0) {\n                        counter++;\n                    }\n                }\n                if(end - begin < len ) {\n                    len = end - begin;\n                    head = begin;\n                }\n                begin++;\n            }\n        }\n        if(len == Integer.MAX_VALUE) return "";\n        return s.substring(head, head + len);\n    }\n}\n')))}p.isMDXComponent=!0},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),p=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},s=function(e){var n=p(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(t),m=r,d=s["".concat(o,".").concat(m)]||s[m]||b[m]||a;return t?i.a.createElement(d,c({ref:n},u,{components:t})):i.a.createElement(d,c({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<a;u++)o[u]=t[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
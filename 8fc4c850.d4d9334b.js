(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{118:function(t,n,e){"use strict";e.r(n),e.d(n,"frontMatter",(function(){return c})),e.d(n,"metadata",(function(){return s})),e.d(n,"rightToc",(function(){return a})),e.d(n,"default",(function(){return l}));var r=e(1),i=e(6),o=(e(0),e(145)),c={id:"bfs2_1",title:"Cheapest Flights Within K Stops"},s={id:"bfs2_1",title:"Cheapest Flights Within K Stops",description:"## Description",source:"@site/docs/leetcode787.md",permalink:"/docs/bfs2_1",editUrl:"http://localhost:3000/docs/leetcode787.md"},a=[{value:"Description",id:"description",children:[]},{value:"Solution",id:"solution",children:[]}],p={rightToc:a};function l(t){var n=t.components,e=Object(i.a)(t,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,e,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"description"},"Description"),Object(o.b)("p",null,"There are n cities connected by m flights. Each flight starts from city ",Object(o.b)("inlineCode",{parentName:"p"},"u")," and arrives at v with a price ",Object(o.b)("inlineCode",{parentName:"p"},"w"),"."),Object(o.b)("p",null,"Now given all the cities and flights, together with starting city src and the destination dst, your task is to find the cheapest price from src to dst with up to ",Object(o.b)("inlineCode",{parentName:"p"},"k")," stops. If there is no such route, output ",Object(o.b)("inlineCode",{parentName:"p"},"-1"),"."),Object(o.b)("h2",{id:"solution"},"Solution"),Object(o.b)("p",null,"Dijkastra's algorithm"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"class Solution {\n    private class City implements Comparable<City> {\n        int id;\n        int costFromSrc;\n        int stopFromSrc;\n        \n        public City(int id, int costFromSrc, int stopFromSrc) {\n            this.id = id;\n            this.costFromSrc = costFromSrc;\n            this.stopFromSrc = stopFromSrc;\n        }\n        public boolean equals(City c) {\n            if(c instanceof City) {\n                return this.id == c.id;\n            }\n            return false;\n        }\n        public int compareTo(City c){\n            return this.costFromSrc - c.costFromSrc;\n        }\n    }\n\n    public int findCheapestPrice(int n, int[][] flights, int src, int dst, int K) {\n        int[][] srcToDst = new int[][];\n        for(int i = 0; i < n; i++) {\n            srcToDst[flights[i][0]][flights[i][1]] = flight[i][2];\n        }\n\n        PriorityQueue<City> minHeap = new PriorityQueue();\n        miniHeap.offer(new City(src, 0, 0));\n        \n        int[] cost = new int[n];\n        Arrays.fill(cost, Integer.MAX_VALUE);\n        cost[src] = 0;\n        int[] stop = new int[n];\n        Arrays.fill(stop, Integer.MAX_VALUE);\n        stop[src] = 0;\n\n        while(!minHeap.isEmpty()){\n            City current = minHeap.pop();\n            if(current.id = dst) return current.costFromSrc;\n            if(current.stopFromSrc == K + 1) continue;\n            int[] nexts = srcToDst[current.id];\n            for(int i = 0; i < n; i++) {\n                if(nexts[i] != 0) {\n                    int newCost = current.costFromSrc + nexts[i];\n                    int newStop = current.stopFrom + 1;\n                    if(newCost < cost[i]){\n                        minHeap.offer(new City(i, newCost, newStop));\n                        cost[i] = newCost;\n                    } else if(newStop < stop[i]) {\n                        minHeap.offer(new City(i, newCost, newStop))\n                    }\n                }\n            }\n        }\n    }\n}\n")),Object(o.b)("p",null,"Solution2 "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public int findCheapestPrice(int n, int[][] flights, int src, int dst, int k) {\n    Map<Integer, Map<Integer, Integer>> prices = new HashMap<>();\n    for(int[] f: flights) {\n        if(!prices.containsKey[f[0]]) {\n            prices.put(f[0], new HashMap<>());\n        }\n        prices.get(f[0]).put(f[1], f[2]);\n    }\n    Queue<int[]> pq = new PriorityQueue<>((a, b) -> (Integer.compare(a[0], b[0])));\n    pd.add(new int[] {0, src, k + 1});\n    while(!pq.isEmpty()) {\n        int[] top = pq.remove();\n        int price = top[0];\n        int city = top[1];\n        int stops = top[2];\n        if(city == dst) return price;\n        if(stops > 0) {\n            Map<Integer, Integer> adj = prices.getOrDefault(city, new Hashmap<>());\n            for(int a: adj.keySet()) {\n                pq.add(new int[] {price + adj.get(a), stops - 1})\n            }\n        }\n    }\n    return -1;\n}\n")))}l.isMDXComponent=!0},145:function(t,n,e){"use strict";e.d(n,"a",(function(){return u})),e.d(n,"b",(function(){return b}));var r=e(0),i=e.n(r);function o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function c(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function s(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?c(Object(e),!0).forEach((function(n){o(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function a(t,n){if(null==t)return{};var e,r,i=function(t,n){if(null==t)return{};var e,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var p=i.a.createContext({}),l=function(t){var n=i.a.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):s({},n,{},t)),e},u=function(t){var n=l(t.components);return i.a.createElement(p.Provider,{value:n},t.children)},f={inlineCode:"code",wrapper:function(t){var n=t.children;return i.a.createElement(i.a.Fragment,{},n)}},d=Object(r.forwardRef)((function(t,n){var e=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,p=a(t,["components","mdxType","originalType","parentName"]),u=l(e),d=r,b=u["".concat(c,".").concat(d)]||u[d]||f[d]||o;return e?i.a.createElement(b,s({ref:n},p,{components:e})):i.a.createElement(b,s({ref:n},p))}));function b(t,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var o=e.length,c=new Array(o);c[0]=d;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=t,s.mdxType="string"==typeof t?t:r,c[1]=s;for(var p=2;p<o;p++)c[p]=e[p];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,e)}d.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{144:function(n,e,t){"use strict";t.d(e,"a",(function(){return m})),t.d(e,"b",(function(){return j}));var r=t(0),i=t.n(r);function u(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){u(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},u=Object.keys(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=i.a.createContext({}),l=function(n){var e=i.a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):s({},e,{},n)),t},m=function(n){var e=l(n.components);return i.a.createElement(c.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.a.createElement(i.a.Fragment,{},e)}},b=Object(r.forwardRef)((function(n,e){var t=n.components,r=n.mdxType,u=n.originalType,a=n.parentName,c=o(n,["components","mdxType","originalType","parentName"]),m=l(t),b=r,j=m["".concat(a,".").concat(b)]||m[b]||p[b]||u;return t?i.a.createElement(j,s({ref:e},c,{components:t})):i.a.createElement(j,s({ref:e},c))}));function j(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var u=t.length,a=new Array(u);a[0]=b;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=n,s.mdxType="string"==typeof n?n:r,a[1]=s;for(var c=2;c<u;c++)a[c]=t[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},93:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return a})),t.d(e,"metadata",(function(){return s})),t.d(e,"rightToc",(function(){return o})),t.d(e,"default",(function(){return l}));var r=t(1),i=t(6),u=(t(0),t(144)),a={id:"leetcode15",title:"3Sum"},s={id:"leetcode15",title:"3Sum",description:"## Description",source:"@site/docs/leetcode15.md",permalink:"/docs/leetcode15",editUrl:"http://localhost:3000/docs/leetcode15.md"},o=[{value:"Description",id:"description",children:[]},{value:"Constraints:",id:"constraints",children:[]},{value:"Solution",id:"solution",children:[]}],c={rightToc:o};function l(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(u.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(u.b)("h2",{id:"description"},"Description"),Object(u.b)("p",null,"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero."),Object(u.b)("p",null,"Notice that the solution set must not contain duplicate triplets.\nExample 1:"),Object(u.b)("p",null,"Input: nums = ","[-1,0,1,2,-1,-4]","\nOutput: [","[-1,-1,2]",",","[-1,0,1]","]\nExample 2:"),Object(u.b)("p",null,"Input: nums = []\nOutput: []\nExample 3:"),Object(u.b)("p",null,"Input: nums = ","[0]","\nOutput: []"),Object(u.b)("h2",{id:"constraints"},"Constraints:"),Object(u.b)("p",null,"0 <= nums.length <= 3000\n-10^5 <= nums","[i]"," <= 10^5"),Object(u.b)("h2",{id:"solution"},"Solution"),Object(u.b)("ol",null,Object(u.b)("li",{parentName:"ol"},"Sort arry"),Object(u.b)("li",{parentName:"ol"},"loop through array\n2.1 treat -nums","[i]"," as target to find two sum from rest\n2.2 need pass same value to next")),Object(u.b)("pre",null,Object(u.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public List<List<Integer>> threeSum(int[] nums) {\n    List<List<Integer>> result = new ArrayList<>();\n    Array.sort(nums);\n    for(int i = 0; i + 2 < nums.length; i++) {\n        if(i > 0 && nums[i] == nums[i - 1]) {\n            continue;\n        }\n        int j = i + 1; k = nums.length - 1;\n        int target = - nums[i];\n        while(j < k ) {\n            if(nums[j] + nums[k] == target) {\n                result.add(Arrays.asList(nums[i], nums[j], nums[k]));\n                j++;\n                k--;\n                while(j < k  && nums[j] == nums[j - 1]) {\n                    j++;\n                }\n                while( j< k  && nums[k] == nums[k + 1]) {\n                    k--;\n                }\n            } else if(nums[j] + nums[k] > target) {\n                k--;\n            } else {\n                j++;\n            }\n        }\n    }\n    return result;\n}\n\n")),Object(u.b)("pre",null,Object(u.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"public List<List<Integer>> threeSum(int[] nums) {\n    List<List<Integer>> result = new ArrayList<>();\n    Arrays.sort(nums);\n    for(int i = 0; i + 2 < nums.length; i++) {\n        if( i > 0 nums[i] = nums[i - 1]) {\n            continue;\n        }\n        int j = i + 1, k = nums.length - 1;\n        int target = -nums[i];\n        while(j < k) {\n            if(nums[j] + nums[k] == target) {\n                result.add(Arrays.asList(nums[i], nums[j], nums[k]));\n                j++;\n                k--;\n            }\n            while(j < k && nums[j] == nums[j - 1]) j++;\n            while(j < k && num[k] == nums[k + 1]) k--;\n        } else if ( nums[j] + nums[k] > target) {\n            k--;\n        } else {\n            j++;\n        }\n    }\n    return result;\n}\n")))}l.isMDXComponent=!0}}]);